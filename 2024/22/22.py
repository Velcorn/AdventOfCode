# Read input as list of ints
with open('22_input.txt') as f:
    secret_numbers = [int(x) for x in f.read().split()]


def evolve(secret_number, iterations):
    for _ in range(iterations):
        # Step 1: Multiply by 64, calculate bitwise XOR with result and secret number
        result = secret_number * 64
        secret_number = result ^ secret_number
        secret_number %= 16777216
        # Step 2: Divide by 32, calculate bitwise XOR with result and secret number, modulo 16777216
        result = secret_number // 32
        secret_number = result ^ secret_number
        secret_number %= 16777216
        # Step 3: Multiply by 2048, calculate bitwise XOR with result and secret number, modulo 16777216
        result = secret_number * 2048
        secret_number = result ^ secret_number
        secret_number %= 16777216
    return secret_number


# Part One: What is the sum of the 2000th secret number generated by each buyer?
secret_nums = [evolve(secret_number, 2000) for secret_number in secret_numbers]
secret_sum = sum(evolve(secret_number, 2000) for secret_number in secret_numbers)
print(f'Part One: {secret_sum}')
